generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "fullTextIndex"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int      @id @unique @default(autoincrement())
  email       String?  @unique
  password    String?
  auth        String?
  firstName   String?
  lastName    String?
  phoneNumber String?
  birthDate   String?
  status      Boolean  @default(false)
  role        String
  orders      Order_[]
  reviews     Review[]
}

model Role {
  id       Int    @id @default(autoincrement())
  roleName String
}

model Product {
  id            Int            @id @unique @default(autoincrement())
  name          String
  short_descr   String?
  description   String?
  producer      String?
  price         Decimal
  // charact                 String?
  in_stock      Int
  img_path                String?
  categoryId    Int?
  subcategoryId Int?
  raiting       Float
  category      Category?      @relation(fields: [categoryId], references: [id])
  subcategory   Subcategory?   @relation(fields: [subcategoryId], references: [id])
  buckets       Bucket[]
  colors        Color[]
  materials     Material[]
  reviews       Review[]
  sliders       Slider[]
  CharactValue  CharactValue[]
  Memory        Memory[]
}

model Characteristic {
  id           Int            @id @unique @default(autoincrement())
  name         String
  CharactValue CharactValue[]
}

model CharactValue {
  id             Int             @id @unique @default(autoincrement())
  prodId         Int?
  product        Product?        @relation(fields: [prodId], references: [id])
  charactId      Int?
  characteristic Characteristic? @relation(fields: [charactId], references: [id])
  value          String
}

model Color {
  id       Int      @id @unique @default(autoincrement())
  prodId   Int?
  color    String
  img_path String?
  product  Product? @relation(fields: [prodId], references: [id])
}

model Memory {
  id      Int      @id @unique @default(autoincrement())
  prodId  Int?
  size    String
  product Product? @relation(fields: [prodId], references: [id])
}

model Material {
  id       Int      @id @unique @default(autoincrement())
  prodId   Int?
  material String
  img_path String?
  product  Product? @relation(fields: [prodId], references: [id])
}

model Service {
  id          Int      @id @default(autoincrement())
  name        String
  short_descr String?
  description String?
  price       Decimal
  img_path    String?
  raiting     Float
  reviews     Review[]
}

model Category {
  id           Int           @id @default(autoincrement())
  categoryName String
  img_path     String?
  block_type   String?
  main_page    Boolean?      @default(false)
  products     Product[]
  subcats      Subcategory[]
}

model Subcategory {
  id         Int       @id @default(autoincrement())
  name       String
  categoryId Int?
  category   Category? @relation(fields: [categoryId], references: [id])
  products   Product[]
}

model Order_ {
  id        Int       @id @default(autoincrement())
  userId    Int?
  totalCost Float?
  status    String    @default("registered")
  date      DateTime? @default(now())
  user      User?     @relation(fields: [userId], references: [id])
  buckets   Bucket[]
}

model Bucket {
  id        Int      @id @default(autoincrement())
  orderId   Int
  prodId    Int?
  quantity  Int?
  equipment String?
  order     Order_   @relation(fields: [orderId], references: [id])
  product   Product? @relation(fields: [prodId], references: [id])
}

model Review {
  id          Int      @id @default(autoincrement())
  body        String
  prodId      Int?
  serviceId   Int?
  userId      Int
  createdDate String
  raiting     Int
  authorName  String
  productName String
  text        String
  product     Product? @relation(fields: [prodId], references: [id])
  service     Service? @relation(fields: [serviceId], references: [id])
  user        User     @relation(fields: [userId], references: [id])
}

model Currency {
  id   Int       @id @default(autoincrement())
  rate Float
  date DateTime? @default(now())
}

model Slider {
  id          Int      @id @default(autoincrement())
  prodId      Int?
  title       String?
  description String?
  img_path    String?
  product     Product? @relation(fields: [prodId], references: [id])
}
